"""
Django settings for ecommerce project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta

from pathlib import Path

import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-r(+f%e!^r4bmmikc9gb14iuo@j3w)(hg5($!%c*9+)+f0_=74-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['192.168.1.126','192.168.1.130','*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # app
    'useraccounts',
    'product',
    'inventory',
    'order',
    'cart',
    'dashboard',
    'wishlist',
    'organizationsetting',
    'warehouse',
    'offer',
    # third party
    'corsheaders',
    'rest_framework',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',

    # swagger 
    'drf_yasg',

    #  ckeditor
    'ckeditor',



    'django.contrib.sites',  # Required by django-allauth
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google', 
    'allauth.socialaccount.providers.facebook',
    
]




AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)


SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Basic': {
            'type': 'basic'
        }
    }
}


SITE_ID = 1
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',


    # 'product.middleware.GeoIPMiddleware',


  

    "corsheaders.middleware.CorsMiddleware",

    'allauth.account.middleware.AccountMiddleware',  # Add this line for social login

]

LANGUAGES = [
    ('en', 'English'),
    ('ar', 'Arabic'),
    # Add other languages as needed
]

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]




ROOT_URLCONF = 'ecommerce.urls'

# settings.py

SESSION_ENGINE = 'django.contrib.sessions.backends.db'

# CORS_ORIGIN_ALLOW_ALL = True
# CORS_ALLOW_CREDENTIALS = True

# SESSION_COOKIE_HTTPONLY = False
# # SESSION_COOKIE_SECURE = False

# SESSION_COOKIE_SAMESITE = 'None'
# SESSION_COOKIE_SECURE = True  # Set to True for HTTPS deployment
# CSRF_COOKIE_SAMESITE = 'None'
# CSRF_COOKIE_SECURE = True  # Set to True for HTTPS deployment

# CSRF_COOKIE_HTTPONLY = False
# CSRF_COOKIE_SECURE = False

# CORS_ALLOWED_ORIGINS = [
#     'http://localhost:5173',
#     'http://localhost:3000',
#     'http://192.168.1.126:8000',
# ]

# SESSION_COOKIE_AGE = 1200  # 20 minutes
# SESSION_SAVE_EVERY_REQUEST = True
# SESSION_EXPIRE_AT_BROWSER_CLOSE = False
# settings.py
# SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Ensure this is set
# SESSION_COOKIE_AGE = 1200  # Set to an appropriate value (e.g., 20 minutes)
# SESSION_SAVE_EVERY_REQUEST = True  # Save session on every request
# SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # Session should persist even if the browser is closed

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 'dashboard.context_processors.language_check',  # Adjust to your actual app name
                'dashboard.context_processor.country_based_template',  # Add this line


            ],
        },
    },
]

WSGI_APPLICATION = 'ecommerce.wsgi.application'



REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,  # Number of items per page
}
# settings.py

# import os

# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# GEOIP_PATH = os.path.join(BASE_DIR, 'geoip', 'GeoLite2-Country.mmdb')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent

# # GeoIP path
# GEOIP_PATH = BASE_DIR / 'ecommerce' / 'geoip' / 'GeoLite2-Country.mmdb'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [
    BASE_DIR / "static",
]
STATIC_ROOT = BASE_DIR / "staticfiles"


MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'




AUTH_USER_MODEL = 'useraccounts.User'


EMAIL_BACKEND="django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = "rmshthapa987@gmail.com"
EMAIL_HOST_PASSWORD = "ijqfeipqqfmrdfrr"
EMAIL_USE_TLS = True




# JWT Settings
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=120),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'BLACKLIST_AFTER_ROTATION': True,
    'ALGORITHM': 'HS256',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',
    'JTI_CLAIM': 'jti',
}

STRIPE_SECRET_KEY = "sk_test_51OdmxKClB7QZ88g8QOWK3DnKlPQXhFheiD2h2KQX2cW3d61zLda2fCsyWcguMS2WpiDa3h6ocIdrAIgHmB7X6tfO0091BgTSFi"
STRIPE_PUBLISHABLE_KEY = "pk_test_51OdmxKClB7QZ88g8IcOIpCGK0XGnHPbfLaWMsByDE7HQsGuUSNpVZLGG8LcZoeDIYgACKH7lEN1cLBGqClUyzCio00QX1Y1soL"

