# Generated by Django 4.2.3 on 2024-06-24 06:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('product', '0004_flashsell_offer_remove_product_attributes_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('company_name', models.CharField(max_length=150)),
                ('country_region', models.CharField(max_length=150)),
                ('street_address', models.CharField(max_length=150)),
                ('apartment_number', models.CharField(blank=True, max_length=150, null=True)),
                ('state', models.CharField(max_length=150)),
                ('town_city', models.CharField(max_length=150)),
                ('zip_code', models.CharField(max_length=150)),
                ('phone', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('set_default', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, limit_choices_to=models.Q(('is_user', True), ('is_vendor', True), _connector='OR'), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deliveryAddress', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(choices=[('credit', 'Credit'), ('cod', 'Cash on Delivery')], max_length=50)),
                ('order_status', models.CharField(choices=[('pending', 'Pending'), ('accept', 'Accept'), ('on_delivery', 'On Delivery'), ('delivered', 'Delivered')], default='pending', max_length=50)),
                ('delivered_date', models.DateField(blank=True, editable=False, null=True)),
                ('itemsPrice', models.FloatField(blank=True, null=True)),
                ('shippingPrice', models.FloatField(blank=True, null=True)),
                ('taxPrice', models.FloatField(blank=True, null=True)),
                ('totalPrice', models.FloatField(blank=True, null=True)),
                ('isPaid', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('delivery_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deliver_address', to='order.deliveryaddress')),
                ('devlivery_agent', models.ForeignKey(blank=True, limit_choices_to={'is_delivery_agent': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('order_item_status', models.CharField(choices=[('pending', 'Pending'), ('accept', 'Accept'), ('ready_to_pick_up', 'Ready To Pickup'), ('picked', 'Picked')], default='pending', max_length=50)),
                ('ordered_date', models.DateTimeField(auto_now=True)),
                ('item_price', models.PositiveIntegerField(default=1)),
                ('attribute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.stock')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='order.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_product', to='product.product')),
            ],
            options={
                'ordering': ('-ordered_date',),
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='ShippingManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone_name', models.CharField(max_length=50)),
                ('shipping_price', models.CharField(blank=True, max_length=150, null=True)),
                ('cities', models.ManyToManyField(related_name='shipping_management_cities', to='order.city')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_management', to='order.state')),
            ],
        ),
        migrations.CreateModel(
            name='ReturnOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('return_quantity', models.IntegerField(default=0)),
                ('product_image', models.ImageField(blank=True, null=True, upload_to='returnproduct/')),
                ('retun_item_status', models.CharField(choices=[('pending', 'Pending'), ('accept', 'Accept'), ('picked', 'Picked')], default='pending', max_length=50)),
                ('return_status', models.CharField(blank=True, choices=[('partially_return', 'Partially Return'), ('complte_return', 'Complete Return')], editable=False, max_length=50, null=True)),
                ('return_date', models.DateTimeField(auto_now_add=True)),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='return_order_items', to='order.orderitem')),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coupontitle', models.CharField(max_length=150, verbose_name='Coupon Title')),
                ('coupon_code', models.CharField(max_length=50, verbose_name='Coupon Code')),
                ('discount_on', models.CharField(choices=[('all_product', 'All Product'), ('category', 'Category'), ('sub_category', 'Sub Category'), ('shipping', 'Shipping')], max_length=50, verbose_name='Discount On')),
                ('discount', models.FloatField(verbose_name='Discount')),
                ('coupon_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed_amount', 'Fixed Amount')], max_length=50, verbose_name='Coupon Type')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('expired_date', models.DateField(verbose_name='Expired Date')),
                ('coupon_status', models.CharField(choices=[('active', 'Active'), ('deactive', 'Deactive')], max_length=50, verbose_name='Coupon Status')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coupon_category', to='product.category')),
                ('sub_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coupon_sub_category', to='product.subcategory')),
            ],
            options={
                'verbose_name': 'Coupon',
                'verbose_name_plural': 'Coupons',
            },
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state_cities', to='order.state'),
        ),
    ]
